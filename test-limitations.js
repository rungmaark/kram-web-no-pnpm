// test-limitations.js
require('dotenv').config();
const { calculateEnhancedSemanticRelevance } = require('./lib/ultraStrictSemanticAnalyzer.ts');

async function testSystemLimitations() {
    console.log('üö® Testing System Limitations...\n');

    // Test cases that might challenge the AI
    const challengingQueries = [
        // 1. Very specific Thai culture
        '‡∏ä‡∏≠‡∏ö‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ï‡πâ‡∏°‡∏°‡∏±‡∏î',
        '‡πÅ‡∏ü‡∏ô‡∏Ñ‡∏•‡∏±‡∏ö BLACKPINK', 
        '‡∏Ñ‡∏ô‡πÄ‡∏•‡πà‡∏ô Free Fire',
        '‡∏ä‡∏≠‡∏ö‡∏î‡∏π TikTok',
        
        // 2. Abstract concepts
        '‡∏Ñ‡∏ô‡∏°‡∏µ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå',
        '‡∏™‡∏≤‡∏ß‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å',
        '‡∏´‡∏ô‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà',
        
        // 3. Regional/cultural
        '‡∏™‡∏≤‡∏ß‡∏≠‡∏µ‡∏™‡∏≤‡∏ô',
        '‡∏Ñ‡∏ô‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û',
        '‡∏Ñ‡∏ô‡πÉ‡∏ï‡πâ',
        
        // 4. New trends/slang
        '‡∏Ñ‡∏ô‡πÄ‡∏õ‡πá‡∏ô influencer',
        '‡∏ä‡∏≠‡∏ö crypto',
        '‡∏Ñ‡∏ô work from home',
        
        // 5. Very specific interests
        '‡∏ä‡∏≠‡∏ö‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏õ‡∏•‡∏≤‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°',
        '‡∏Ñ‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏µ‡∏ï‡πâ‡∏≤‡∏£‡πå‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å',
        '‡∏ä‡∏≠‡∏ö‡∏ó‡∏≥‡∏Ç‡∏ô‡∏°‡πÑ‡∏ó‡∏¢‡πÇ‡∏ö‡∏£‡∏≤‡∏ì'
    ];

    const testProfiles = [
        {
            name: 'Traditional Food Lover',
            interests: ['‡∏Ç‡πâ‡∏≤‡∏ß‡∏ï‡πâ‡∏°‡∏°‡∏±‡∏î', '‡∏Ç‡∏ô‡∏°‡πÑ‡∏ó‡∏¢', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÇ‡∏ö‡∏£‡∏≤‡∏ì'],
            bio: '‡∏ä‡∏≠‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡πÇ‡∏ö‡∏£‡∏≤‡∏ì',
            rawProfileText: 'Love traditional Thai food, especially local desserts'
        },
        {
            name: 'K-Pop Fan',
            interests: ['BLACKPINK', 'K-pop', '‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ'],
            bio: '‡πÅ‡∏ü‡∏ô‡∏Ñ‡∏•‡∏±‡∏ö BLACKPINK',
            rawProfileText: 'Huge BLACKPINK fan, love Korean culture and music'
        },
        {
            name: 'Mobile Gamer',
            interests: ['Free Fire', 'mobile games', '‡πÄ‡∏Å‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠'],
            bio: '‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠',
            rawProfileText: 'Mobile gamer, play Free Fire and PUBG Mobile daily'
        },
        {
            name: 'Social Media User',
            interests: ['TikTok', 'Instagram', 'social media'],
            bio: '‡∏ä‡∏≠‡∏ö‡∏î‡∏π TikTok',
            rawProfileText: 'Love watching TikTok videos and creating content'
        },
        {
            name: 'Generic Person',
            interests: ['‡∏´‡∏ô‡∏±‡∏á', '‡πÄ‡∏û‡∏•‡∏á', '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠'],
            bio: '‡∏ä‡∏≠‡∏ö‡∏î‡∏π‡∏´‡∏ô‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á',
            rawProfileText: 'Love movies, music and reading books'
        },
        {
            name: 'Tech Person',
            interests: ['‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå', 'programming', 'technology'],
            bio: '‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏≤‡∏ô IT',
            rawProfileText: 'Work in IT, love programming and new technology'
        }
    ];

    for (const query of challengingQueries) {
        console.log(`\n=== Testing Challenging Query: "${query}" ===`);
        
        const results = [];
        for (const profile of testProfiles) {
            try {
                const score = await calculateEnhancedSemanticRelevance(query, profile);
                results.push({ profile: profile.name, score });
                
                // Add small delay to avoid rate limiting
                await new Promise(resolve => setTimeout(resolve, 100));
            } catch (error) {
                console.error(`Error testing ${profile.name}:`, error.message);
                results.push({ profile: profile.name, score: 0 });
            }
        }
        
        // Sort by score (descending)
        results.sort((a, b) => b.score - a.score);
        
        console.log('Results:');
        results.forEach((result, idx) => {
            const emoji = result.score >= 0.8 ? 'üéØ' : result.score >= 0.6 ? '‚úÖ' : result.score >= 0.4 ? '‚ö†Ô∏è' : '‚ùå';
            console.log(`  ${idx + 1}. ${emoji} ${result.profile}: ${result.score.toFixed(3)}`);
        });
        
        // Analyze if the result makes sense
        const topResult = results[0];
        const expectedMatch = getExpectedMatch(query);
        const isCorrect = topResult.profile.includes(expectedMatch) || topResult.score >= 0.7;
        
        console.log(`Expected: ${expectedMatch}, Got: ${topResult.profile} - ${isCorrect ? '‚úÖ Correct' : '‚ùå Incorrect'}`);
    }

    console.log('\nüìä Limitation Analysis Complete!');
    console.log('\nüîç Key Findings:');
    console.log('1. AI works well with common concepts in training data');
    console.log('2. Struggles with very specific/new cultural references');
    console.log('3. Abstract concepts (‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå, ‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å) are subjective');
    console.log('4. Regional terms may not be well understood');
    console.log('5. New trends/slang might not be recognized');
}

function getExpectedMatch(query) {
    const expectations = {
        '‡∏ä‡∏≠‡∏ö‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ï‡πâ‡∏°‡∏°‡∏±‡∏î': 'Traditional Food',
        '‡πÅ‡∏ü‡∏ô‡∏Ñ‡∏•‡∏±‡∏ö BLACKPINK': 'K-Pop Fan',
        '‡∏Ñ‡∏ô‡πÄ‡∏•‡πà‡∏ô Free Fire': 'Mobile Gamer',
        '‡∏ä‡∏≠‡∏ö‡∏î‡∏π TikTok': 'Social Media',
        '‡∏Ñ‡∏ô‡∏°‡∏µ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå': 'Generic', // Subjective
        '‡∏™‡∏≤‡∏ß‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å': 'Generic', // Subjective
        '‡∏´‡∏ô‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà': 'Generic', // Subjective
        '‡∏™‡∏≤‡∏ß‡∏≠‡∏µ‡∏™‡∏≤‡∏ô': 'Generic', // Regional
        '‡∏Ñ‡∏ô‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û': 'Generic', // Regional
        '‡∏Ñ‡∏ô‡πÉ‡∏ï‡πâ': 'Generic', // Regional
        '‡∏Ñ‡∏ô‡πÄ‡∏õ‡πá‡∏ô influencer': 'Social Media',
        '‡∏ä‡∏≠‡∏ö crypto': 'Tech',
        '‡∏Ñ‡∏ô work from home': 'Tech',
        '‡∏ä‡∏≠‡∏ö‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏õ‡∏•‡∏≤‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°': 'Generic',
        '‡∏Ñ‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏µ‡∏ï‡πâ‡∏≤‡∏£‡πå‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å': 'Generic',
        '‡∏ä‡∏≠‡∏ö‡∏ó‡∏≥‡∏Ç‡∏ô‡∏°‡πÑ‡∏ó‡∏¢‡πÇ‡∏ö‡∏£‡∏≤‡∏ì': 'Traditional Food'
    };
    return expectations[query] || 'Unknown';
}

testSystemLimitations().catch(console.error);